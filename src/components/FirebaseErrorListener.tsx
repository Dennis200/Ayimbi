// DO NOT MANUALLY EDIT THIS FILE. IT IS AUTO-GENERATED BY FIREBASE STUDIO.
'use client';

import { useEffect, useCallback } from 'react';
import { useToast } from '@/hooks/use-toast';
import { errorEmitter } from '@/firebase/error-emitter';

/**
 * `<FirebaseErrorListener />`
 *
 * This is a client-side component that listens for custom
 * `permission-error` events and displays a toast notification.
 *
 * It is used to provide immediate feedback to the developer in the
 * browser when a Firestore security rule denies an operation.
 *
 * @returns {null} This component does not render any UI.
 */
export function FirebaseErrorListener() {
  const { toast } = useToast();

  const handlePermissionError = useCallback((error: any) => {
    console.error('Firestore Permission Error:', error.toString());
    toast({
      title: 'Firestore Permission Error',
      description: error.toString(),
      variant: 'destructive',
      duration: 10000,
    });
  }, [toast]);

  useEffect(() => {
    const unsubscribe = errorEmitter.on('permission-error', handlePermissionError);
    return () => {
      unsubscribe();
    };
  }, [handlePermissionError]);

  return null;
}
