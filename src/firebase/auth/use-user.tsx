// DO NOT MANUALLY EDIT THIS FILE. IT IS AUTO-GENERATED BY FIREBASE STUDIO.
'use client';
import {useEffect, useState} from 'react';
import {getAuth, onAuthStateChanged, type User} from 'firebase/auth';
import {useFirebaseApp} from '@/firebase/provider';

/**
 * `useUser` is a hook that returns the currently authenticated user.
 * It listens for changes in the authentication state and updates the user accordingly.
 * It must be used within a `FirebaseProvider` component.
 *
 * @returns An object containing the user and a loading state.
 * @throws An error if used outside of a `FirebaseProvider`.
 *
 * @example
 * ```tsx
 * import { useUser } from '@/firebase';
 *
 * function MyComponent() {
 *  const { user, loading } = useUser();
 *
 * if (loading) {
 *   return <div>Loading...</div>;
 * }
 *
 * if (user) {
 *  return <div>Welcome, {user.displayName}</div>;
 * }
 *
 * return <div>Please sign in</div>;
 * }
 * ```
 */
export function useUser() {
  const app = useFirebaseApp();
  const auth = getAuth(app);
  const [user, setUser] = useState<User | null>(auth.currentUser);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, u => {
      setUser(u);
      setLoading(false);
    });

    return () => unsubscribe();
  }, [auth]);

  return {user, loading};
}
